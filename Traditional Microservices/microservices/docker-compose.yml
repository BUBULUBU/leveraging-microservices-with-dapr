version: '3.1'
services:
  db:
    image: mysql:8.0
    volumes:
      - db_data:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    environment:
      MYSQL_INITDB_SKIP_TZINFO: 1
      TZ: "Europe/Berlin"
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_USER: "admin"
      MYSQL_PASSWORD: "admin"
    ports:
      - "3306:3306"
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    depends_on:
      - db
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    networks:
      - app-network

  productcatalog:
    build: ./productcatalog
    restart: always
    depends_on:
      - db
    ports:
      - "3500:3500"
    networks:
      - app-network
    environment:
      - PORT=3500
      - DB_HOSTNAME=db
      - DB_DATABASE=product_catalog
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - NODE_ENV=production

  shoppingcart:
    build: ./shoppingcart
    restart: always
    depends_on:
      - db
    ports:
      - "3501:3501"
    networks:
      - app-network
    environment:
      - PORT=3501
      - DB_HOSTNAME=db
      - DB_DATABASE=shopping_cart
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - NODE_ENV=production

  ordermanagement:
    build: ./ordermanagement
    restart: always
    depends_on:
      - db
    ports:
      - "3502:3502"
    networks:
      - app-network
    environment:
      - PORT=3502
      - DB_HOSTNAME=db
      - DB_DATABASE=order_management
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - NODE_ENV=production

  orderapproval:
    build: ./orderapproval
    restart: always
    depends_on:
      - db
    ports:
      - "3503:3503"
    networks:
      - app-network
    environment:
      - PORT=3503
      - DB_HOSTNAME=db
      - DB_DATABASE=order_approval
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - NODE_ENV=production

  returnmanagement:
    build: ./returnmanagement
    restart: always
    depends_on:
      - db
    ports:
      - "5000:5000"
    networks:
      - app-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=server=db;database=return_management;user=root;password=root;

volumes:
  db_data:

networks:
  app-network:
    driver: bridge